import type { NextApiRequest, NextApiResponse } from 'next'; export default async function h(req:NextApiRequest,res:NextApiResponse){ if(req.method!=='POST') return res.status(405).json({error:'Method Not Allowed'}); const { hand } = req.body as any; const counts:Record<string,number>={}; for(const t of hand) counts[t]=(counts[t]||0)+1; const val=(x:string)=>{ const n=parseInt(x[0]); const s=x[1]; let v=0; if((counts[x]||0)>=2) v+=2; if(s!=='Z'){ const has=(t:string)=> hand.includes(t); if(has(`${n-1}${s}`)||has(`${n+1}${s}`)) v+=2; if(has(`${n-2}${s}`)||has(`${n+2}${s}`)) v+=1; } return v; }; let best=hand[0], sc=1e9; for(const t of hand){ const v=val(t); if(v<sc){ sc=v; best=t; } } return res.json({ tile: best, reason:'local' }); }